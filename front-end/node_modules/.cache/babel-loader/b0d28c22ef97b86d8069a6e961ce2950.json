{"ast":null,"code":"var _jsxFileName = \"/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/MainScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport moment from 'moment';\nimport { useEffect, useState } from \"react\";\nimport { lotteryContract, connectWallet, updateMessage, getCurrentWalletConnected, loadCurrentLottery } from \"./util/interact.js\";\nimport lottoLogo from \"./lottoLogo.svg\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LotteryScreen = () => {\n  _s();\n\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [currentPot, setCurrentPot] = useState(\"\");\n  const [ticketsAmount, setTicketsAmount] = useState(\"\");\n  const [initialDate, setInitialDate] = useState(\"\");\n  const [amountOfDays, setAmountOfDays] = useState(\"\");\n  const [ticketsPrice, setTicketsPrice] = useState(\"\");\n  const [contractOwner, setContractOwner] = useState(\"\");\n  const [dontHide, setDontHide] = useState(true);\n  const navigate = useNavigate();\n\n  const navigateToAdminScreen = () => {\n    navigate('/adminScreen', {\n      replace: true\n    });\n  }; //called only once\n\n\n  useEffect(() => {\n    async function fetchLottery() {\n      const lottery = await loadCurrentLottery();\n      var formatted;\n\n      if (lottery.startingTimestamp == 0) {\n        formatted = \"None\";\n      } else {\n        var t = new Date(lottery.startingTimestamp);\n        formatted = moment(t).format(\"DD/MM/yyyy hh:mm:ss\");\n      }\n\n      setCurrentPot(lottery.potAmount);\n      setTicketsAmount(lottery.ticketsAmount);\n      setInitialDate(formatted);\n      setAmountOfDays(lottery.amountOfDays);\n      setTicketsPrice(lottery.ticketPrice);\n    }\n\n    fetchLottery();\n    addSmartContractListener();\n\n    async function fetchWallet() {\n      const {\n        address,\n        status\n      } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n    }\n\n    fetchWallet();\n    addWalletListener();\n  }, []);\n\n  function addSmartContractListener() {\n    lotteryContract.events.StartedEndLotteryProcessEvent({}, (error, data) => {\n      if (error) {\n        setStatus(\"ðŸ˜¥ \" + error.message);\n      } else {\n        setMessage(data.returnValues[1]);\n        setNewMessage(\"\");\n        setStatus(\"ðŸŽ‰ Your message has been updated!\");\n      }\n    });\n  }\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n        } else {\n          setWallet(\"\");\n          setStatus(\"ðŸ¦Š Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onUpdatePressed = async () => {//TODO: implement\n  }; //the UI of our component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"logo\",\n        src: lottoLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"25px\"\n      },\n      children: [\"Current Pot: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: currentPot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"18px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"Tickets amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline\"\n        },\n        children: ticketsAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"18px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"Initial date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline\"\n        },\n        children: initialDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"18px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"Amount of Days available: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline\"\n        },\n        children: amountOfDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"18px\",\n        marginBottom: \"35px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline\"\n        },\n        children: ticketsPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buyTicket\",\n        onClick: onUpdatePressed,\n        children: \"Buy Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"endLottery\",\n        className: \"buttonRight\",\n        onClick: onUpdatePressed,\n        children: \"End Lottery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middleDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: dontHide ? \"itemInTheMiddle\" : \"hideButton itemInTheMiddle\",\n        id: \"adminSettings\",\n        onClick: navigateToAdminScreen,\n        children: \"Admin Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LotteryScreen, \"gRmuu70PPKxZP7OZQMinqSFLC/8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LotteryScreen;\nexport default LotteryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LotteryScreen\");","map":{"version":3,"sources":["/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/MainScreen.js"],"names":["React","moment","useEffect","useState","lotteryContract","connectWallet","updateMessage","getCurrentWalletConnected","loadCurrentLottery","useNavigate","Link","LotteryScreen","walletAddress","setWallet","status","setStatus","message","setMessage","newMessage","setNewMessage","currentPot","setCurrentPot","ticketsAmount","setTicketsAmount","initialDate","setInitialDate","amountOfDays","setAmountOfDays","ticketsPrice","setTicketsPrice","contractOwner","setContractOwner","dontHide","setDontHide","navigate","navigateToAdminScreen","replace","fetchLottery","lottery","formatted","startingTimestamp","t","Date","format","potAmount","ticketPrice","addSmartContractListener","fetchWallet","address","addWalletListener","events","StartedEndLotteryProcessEvent","error","data","returnValues","window","ethereum","on","accounts","length","connectWalletPressed","walletResponse","onUpdatePressed","lottoLogo","String","substring","paddingTop","display","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from 'moment';\nimport { useEffect, useState } from \"react\";\nimport {\n  lotteryContract,\n  connectWallet,\n  updateMessage,\n  getCurrentWalletConnected,\n  loadCurrentLottery,\n} from \"./util/interact.js\";\n\nimport lottoLogo from \"./lottoLogo.svg\";\n\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst LotteryScreen = () => {\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  const [currentPot, setCurrentPot] = useState(\"\");\n  const [ticketsAmount, setTicketsAmount] = useState(\"\");\n  const [initialDate, setInitialDate] = useState(\"\");\n  const [amountOfDays, setAmountOfDays] = useState(\"\");\n  const [ticketsPrice, setTicketsPrice] = useState(\"\");\n\n  const [contractOwner, setContractOwner] = useState(\"\");\n  const [dontHide, setDontHide] = useState(true);\n\n  const navigate = useNavigate();\n\n  const navigateToAdminScreen = () => {\n    navigate('/adminScreen', {replace: true});\n  };\n\n  //called only once\n  useEffect(() => {\n    async function fetchLottery() {\n      const lottery = await loadCurrentLottery();\n\n      var formatted;\n      if(lottery.startingTimestamp == 0) {\n        formatted = \"None\";\n      }\n      else {\n        var t = new Date(lottery.startingTimestamp);\n        formatted = moment(t).format(\"DD/MM/yyyy hh:mm:ss\");\n      }\n\n      setCurrentPot(lottery.potAmount);\n      setTicketsAmount(lottery.ticketsAmount);\n      setInitialDate(formatted);\n      setAmountOfDays(lottery.amountOfDays);\n      setTicketsPrice(lottery.ticketPrice);\n    }\n    fetchLottery();\n    addSmartContractListener();\n  \n    async function fetchWallet() {\n      const {address, status} = await getCurrentWalletConnected();\n      setWallet(address)\n      setStatus(status); \n    }\n    fetchWallet();\n    addWalletListener(); \n  }, []);\n\n  function addSmartContractListener() {\n    lotteryContract.events.StartedEndLotteryProcessEvent({}, (error, data) => {\n      if (error) {\n        setStatus(\"ðŸ˜¥ \" + error.message);\n      } else {\n        setMessage(data.returnValues[1]);\n        setNewMessage(\"\");\n        setStatus(\"ðŸŽ‰ Your message has been updated!\");\n      }\n    });\n  }\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n        } else {\n          setWallet(\"\");\n          setStatus(\"ðŸ¦Š Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          ðŸ¦Š{\" \"}\n          <a target=\"_blank\" href={`https://metamask.io/download`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onUpdatePressed = async () => { //TODO: implement\n    \n  };\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n      <Link to=\"/\">\n        <img id=\"logo\" src={lottoLogo}></img>\n      </Link>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <p id=\"status\">{status}</p>\n\n      <h2 style={{ paddingTop: \"25px\" }}>Current Pot: <b>{currentPot}</b></h2>\n\n      <div style={{ paddingTop: \"18px\" }}>\n        <h3 style={{ display: \"inline\" }}>Tickets amount: </h3>\n        <p style={{ display: \"inline\" }}>{ticketsAmount}</p>\n      </div>\n\n      <div style={{ paddingTop: \"18px\" }}>\n        <h3 style={{ display: \"inline\" }}>Initial date: </h3>\n        <p style={{ display: \"inline\" }}>{initialDate}</p>\n      </div>\n\n      <div style={{ paddingTop: \"18px\" }}>\n        <h3 style={{ display: \"inline\" }}>Amount of Days available: </h3>\n        <p style={{ display: \"inline\" }}>{amountOfDays}</p>\n      </div>\n\n      <div style={{ paddingTop: \"18px\", marginBottom: \"35px\" }}>\n        <h3 style={{ display: \"inline\" }}>Price: </h3>\n        <p style={{ display: \"inline\" }}>{ticketsPrice}</p>\n      </div>\n\n      <div>\n        <button id=\"buyTicket\" onClick={onUpdatePressed}>\n          Buy Ticket\n        </button>\n\n        <button id=\"endLottery\" className=\"buttonRight\" onClick={onUpdatePressed}>\n          End Lottery\n        </button>\n      </div>\n\n      <div className=\"middleDiv\">\n        <button className={ dontHide?\"itemInTheMiddle\":\"hideButton itemInTheMiddle\" } id=\"adminSettings\" onClick={navigateToAdminScreen}>\n          Admin Settings\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LotteryScreen;"]},"metadata":{},"sourceType":"module"}