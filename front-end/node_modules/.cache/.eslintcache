[{"/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/index.js":"1","/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/AdminScreen.js":"2","/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/reportWebVitals.js":"3","/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/MainScreen.js":"4","/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/util/interact.js":"5"},{"size":823,"mtime":1671142958249,"results":"6","hashOfConfig":"7"},{"size":4040,"mtime":1671154335865,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1665518780000,"results":"9","hashOfConfig":"7"},{"size":2915,"mtime":1671154071373,"results":"10","hashOfConfig":"7"},{"size":644,"mtime":1671127861474,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m8uovc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/index.js",[],"/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/AdminScreen.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],"import React from \"react\";\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport { useEffect, useState } from \"react\";\nimport {\n  lotteryContract,\n  connectWallet,\n  updateMessage,\n  loadCurrentMessage,\n  getCurrentWalletConnected,\n} from \"./util/interact.js\";\n\nimport lottoLogo from \"./lottoLogo.svg\";\n\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst AdminScreen = () => {\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n  const [newPrice, setNewPrice] = useState(\"\");\n  const [numberOfDays, setNumberOfDays] = useState(\"\");\n\n  //called only once\n  useEffect(() => {\n    \n  }, []);\n\n  const navigate = useNavigate();\n\n  function addSmartContractListener() { //TODO: implement\n    \n  }\n\n  function addWalletListener() { //TODO: implement\n    \n  }\n\n  const connectWalletPressed = async () => { //TODO: implement\n    \n  };\n\n  const onUpdatePressed = async () => { //TODO: implement\n    \n  };\n\n  const Modal = () => (\n    <Popup trigger={<button className=\"button\"> Open Modal </button>} modal>\n      <span> Modal content </span>\n    </Popup>\n  );\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n      <Link to=\"/\">\n        <img id=\"logo\" src={lottoLogo}></img>\n      </Link>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <div className=\"block\">\n        <Popup trigger={\n          <button id=\"startLottery\" className=\"button\" onClick={onUpdatePressed}>\n            Start New Lottery </button>\n        } modal>\n          <div className=\"middleDiv\">\n            <input\n              className=\"itemInTheMiddle\"\n              type=\"number\"\n              placeholder=\"Insert number of days.\"\n              onChange={(e) => setNumberOfDays(e.target.value)}\n              value={numberOfDays}\n            />\n          </div>\n          <div className=\"middleDiv\">\n            <input\n              className=\"itemInTheMiddle\"\n              type=\"number\"\n              placeholder=\"Insert tickets price in Wei.\"\n              onChange={(e) => setNewPrice(e.target.value)}\n              value={newPrice}\n            />\n          </div>\n          <div className=\"middleDiv\">\n            <button id=\"startLottery\" className=\"itemInTheMiddle\" onClick={onUpdatePressed}>\n              Start Lottery\n            </button>\n          </div>\n        </Popup>\n\n        <button id=\"withdrawFees\" className=\"buttonRight\" onClick={onUpdatePressed}>\n          Withdraw Fees\n        </button>\n      </div>\n\n      <div className=\"middleDiv\">\n        <Popup trigger={\n          <button id=\"changeTicketPrice\" className=\"buttonSalmon itemInTheMiddle\" onClick={onUpdatePressed}>\n            Change Ticket Price \n          </button>\n        } modal>\n            <div className=\"middleDiv\">\n              <input\n                className=\"itemInTheMiddle\"\n                type=\"number\"\n                placeholder=\"Insert new price in Wei.\"\n                onChange={(e) => setNewPrice(e.target.value)}\n                value={newPrice}\n              />\n            </div>\n            <div className=\"middleDiv\">\n              <button id=\"updatePrice\" className=\"itemInTheMiddle\" onClick={onUpdatePressed}>\n                Update Price\n              </button>\n            </div>\n        </Popup>\n      </div>\n\n      <div>\n        <button id=\"cancelLottery\" className=\"buttonRed\" onClick={onUpdatePressed}>\n            Cancel Lottery\n        </button>\n\n        <button id=\"retrySubmissionOfFounds\" className=\"buttonRight buttonRed\" onClick={onUpdatePressed}>\n            Retry Submission of Founds\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;","/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/reportWebVitals.js",[],"/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/MainScreen.js",["39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  lotteryContract,\n  connectWallet,\n  updateMessage,\n  loadCurrentMessage,\n  getCurrentWalletConnected,\n} from \"./util/interact.js\";\n\nimport lottoLogo from \"./lottoLogo.svg\";\n\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst LotteryScreen = () => {\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  const [hide, setHide] = useState(true);\n\n  const navigate = useNavigate();\n\n  const navigateToAdminScreen = () => {\n    navigate('/adminScreen', {replace: true});\n  };\n\n  //called only once\n  useEffect(() => {\n    \n  }, []);\n\n  function addSmartContractListener() { //TODO: implement\n    \n  }\n\n  function addWalletListener() { //TODO: implement\n    \n  }\n\n  const connectWalletPressed = async () => { //TODO: implement\n    \n  };\n\n  const onUpdatePressed = async () => { //TODO: implement\n    \n  };\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n      <Link to=\"/\">\n        <img id=\"logo\" src={lottoLogo}></img>\n      </Link>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <h2 style={{ paddingTop: \"25px\" }}>Current Pot: <b>{message}</b></h2>\n\n      <div style={{ paddingTop: \"18px\" }}>\n        <h3 style={{ display: \"inline\" }}>Tickets amount: </h3>\n        <p style={{ display: \"inline\" }}>{message}</p>\n      </div>\n\n      <div style={{ paddingTop: \"18px\" }}>\n        <h3 style={{ display: \"inline\" }}>Initial date: </h3>\n        <p style={{ display: \"inline\" }}>{message}</p>\n      </div>\n\n      <div style={{ paddingTop: \"18px\" }}>\n        <h3 style={{ display: \"inline\" }}>Ending date: </h3>\n        <p style={{ display: \"inline\" }}>{message}</p>\n      </div>\n\n      <div style={{ paddingTop: \"18px\", marginBottom: \"35px\" }}>\n        <h3 style={{ display: \"inline\" }}>Price: </h3>\n        <p style={{ display: \"inline\" }}>{message}</p>\n      </div>\n\n      <div>\n        <p id=\"status\">{status}</p>\n\n        <button id=\"buyTicket\" onClick={onUpdatePressed}>\n          Buy Ticket\n        </button>\n\n        <button id=\"endLottery\" className=\"buttonRight\" onClick={onUpdatePressed}>\n          End Lottery\n        </button>\n      </div>\n\n      <div className=\"middleDiv\">\n        <button className={ hide?\"itemInTheMiddle\":\"hideButton itemInTheMiddle\" } id=\"adminSettings\" onClick={navigateToAdminScreen}>\n          Admin Settings\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LotteryScreen;","/Users/tiagoferreira/Desktop/web3-lottery/front-end/src/util/interact.js",[],{"ruleId":"53","severity":1,"message":"54","line":6,"column":3,"nodeType":"55","messageId":"56","endLine":6,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":7,"column":3,"nodeType":"55","messageId":"56","endLine":7,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":8,"endColumn":16},{"ruleId":"53","severity":1,"message":"59","line":9,"column":3,"nodeType":"55","messageId":"56","endLine":9,"endColumn":21},{"ruleId":"53","severity":1,"message":"60","line":10,"column":3,"nodeType":"55","messageId":"56","endLine":10,"endColumn":28},{"ruleId":"53","severity":1,"message":"61","line":19,"column":25,"nodeType":"55","messageId":"56","endLine":19,"endColumn":34},{"ruleId":"53","severity":1,"message":"62","line":20,"column":10,"nodeType":"55","messageId":"56","endLine":20,"endColumn":16},{"ruleId":"53","severity":1,"message":"63","line":20,"column":18,"nodeType":"55","messageId":"56","endLine":20,"endColumn":27},{"ruleId":"53","severity":1,"message":"64","line":21,"column":10,"nodeType":"55","messageId":"56","endLine":21,"endColumn":17},{"ruleId":"53","severity":1,"message":"65","line":21,"column":19,"nodeType":"55","messageId":"56","endLine":21,"endColumn":29},{"ruleId":"53","severity":1,"message":"66","line":30,"column":9,"nodeType":"55","messageId":"56","endLine":30,"endColumn":17},{"ruleId":"53","severity":1,"message":"67","line":32,"column":12,"nodeType":"55","messageId":"56","endLine":32,"endColumn":36},{"ruleId":"53","severity":1,"message":"68","line":36,"column":12,"nodeType":"55","messageId":"56","endLine":36,"endColumn":29},{"ruleId":"53","severity":1,"message":"69","line":48,"column":9,"nodeType":"55","messageId":"56","endLine":48,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":58,"column":9,"nodeType":"72","endLine":58,"endColumn":40},{"ruleId":"53","severity":1,"message":"54","line":4,"column":3,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":5,"column":3,"nodeType":"55","messageId":"56","endLine":5,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":6,"column":3,"nodeType":"55","messageId":"56","endLine":6,"endColumn":16},{"ruleId":"53","severity":1,"message":"59","line":7,"column":3,"nodeType":"55","messageId":"56","endLine":7,"endColumn":21},{"ruleId":"53","severity":1,"message":"60","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":8,"endColumn":28},{"ruleId":"53","severity":1,"message":"61","line":17,"column":25,"nodeType":"55","messageId":"56","endLine":17,"endColumn":34},{"ruleId":"53","severity":1,"message":"63","line":18,"column":18,"nodeType":"55","messageId":"56","endLine":18,"endColumn":27},{"ruleId":"53","severity":1,"message":"65","line":19,"column":19,"nodeType":"55","messageId":"56","endLine":19,"endColumn":29},{"ruleId":"53","severity":1,"message":"73","line":20,"column":10,"nodeType":"55","messageId":"56","endLine":20,"endColumn":20},{"ruleId":"53","severity":1,"message":"74","line":20,"column":22,"nodeType":"55","messageId":"56","endLine":20,"endColumn":35},{"ruleId":"53","severity":1,"message":"75","line":22,"column":16,"nodeType":"55","messageId":"56","endLine":22,"endColumn":23},{"ruleId":"53","severity":1,"message":"67","line":35,"column":12,"nodeType":"55","messageId":"56","endLine":35,"endColumn":36},{"ruleId":"53","severity":1,"message":"68","line":39,"column":12,"nodeType":"55","messageId":"56","endLine":39,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":55,"column":9,"nodeType":"72","endLine":55,"endColumn":40},"no-unused-vars","'lotteryContract' is defined but never used.","Identifier","unusedVar","'connectWallet' is defined but never used.","'updateMessage' is defined but never used.","'loadCurrentMessage' is defined but never used.","'getCurrentWalletConnected' is defined but never used.","'setWallet' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'navigate' is assigned a value but never used.","'addSmartContractListener' is defined but never used.","'addWalletListener' is defined but never used.","'Modal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'newMessage' is assigned a value but never used.","'setNewMessage' is assigned a value but never used.","'setHide' is assigned a value but never used."]